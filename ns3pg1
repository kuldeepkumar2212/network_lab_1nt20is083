

/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation;
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
#include "ns3/netanim-module.h"   //for software
#include "ns3/core-module.h"     //req
#include "ns3/network-module.h"  //for network bn 2 nodes
#include "ns3/internet-module.h"   //for ipv4
#include "ns3/point-to-point-module.h"  //for pont to point connectiom
#include "ns3/applications-module.h"  //for usp application

using namespace ns3;
int main (int argc, char *argv[])
{
	//creation of nodes
  Time::SetResolution (Time::NS);
  NodeContainer nodes; //library function to create nodes
  nodes.Create (2);

	//connection of nodes
  PointToPointHelper pointToPoint; //library 
  pointToPoint.SetDeviceAttribute ("DataRate", StringValue ("5Mbps"));   //attributes of the path
  pointToPoint.SetChannelAttribute ("Delay", StringValue ("2ms"));

	//establishment of path
  NetDeviceContainer devices;
  devices = pointToPoint.Install (nodes);

	//where the packets are stored
  InternetStackHelper stack;
  stack.Install (nodes);

	//interface between nodes
  Ipv4AddressHelper address;
  address.SetBase ("10.1.1.0", "255.255.255.0");  //(base address,mask address)

  Ipv4InterfaceContainer interfaces = address.Assign (devices);

  UdpEchoServerHelper echoServer (9);  //9 is the port number
	//application to be used
  ApplicationContainer serverApps = echoServer.Install (nodes.Get (1)); //making 1 as server
  serverApps.Start (Seconds (1.0));
  serverApps.Stop (Seconds (10.0));

  UdpEchoClientHelper echoClient (interfaces.GetAddress (1), 9); //getting the server address and the port number
  echoClient.SetAttribute ("MaxPackets", UintegerValue (1));    //no of packets
  echoClient.SetAttribute ("Interval", TimeValue (Seconds (1.0)));  //delay
  echoClient.SetAttribute ("PacketSize", UintegerValue (1024));  //size

  ApplicationContainer clientApps = echoClient.Install (nodes.Get (0)); //making 0 as client
  clientApps.Start (Seconds (2.0));  //client start time shld be started after server
  clientApps.Stop (Seconds (10.0));
  AnimationInterface anim ("first.xml");  //to get output from simulator
  Simulator::Run (); 
  Simulator::Destroy ();
  return 0;
}
